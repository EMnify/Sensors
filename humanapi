{
    "name": "humanapi",
    "version": "1.0.1",
    "script": "var token = options.requiredProperties.token || options.globalSettings.HUMAN_TOKEN;\nvar headers = {\n  'Authorization': 'Bearer ' + token,\n  'Accept': 'application/json'\n};\nvar url = 'https://api.humanapi.co/v1/human'\n\nrequest({\n  method: 'GET',\n  uri : url,\n  headers : headers\n}, function (error, res, body) {\n  var parsedResponse;\n  if (error) {\n    send(new Error('Unable to connect to the Human API endpoint.'));\n  } else {\n    if(res.statusCode == 401) {\n      logger.debug(\"Unauthorized request, validate access token\");\n      send(new Error('unauthorized'));\n    } else {\n      try {\n        parsedResponse = JSON.parse(body);\n      } catch (error) {\n        send(new Error('Error parsing JSON response from Human API.'));\n      }\n      // At this point you can use the JSON object to access the results\n      console.log(\"Latest measurement\");\n      console.log(parsedResponse.heartRate);\n      var retValue = {observedState:\"Collected\",\n          rawData:parsedResponse\n      };\n      send(null, retValue);\n    }\n  }\n});",
    "metadata": {
        "author": "",
        "category": "Experimental",
        "description": "Human API example\nHuman API works out of the box with any application -- integrate over 55 data sources. \n<a href='https://humanapi.co'>Human API web site</a>\nIt shows you how to use web scraping with cheerio library.\nIf you don't have a token yet, use <strong>demo</strong> to test it.",
        "documentationURL": "https://docs.humanapi.co/docs/api_overview",
        "iconURL": "http://2.bp.blogspot.com/-mgkP0l6-Rl0/UTjqIpwEKEI/AAAAAAAAAGE/3fHwDLWiiCw/s1600/Picture+6.png",
        "supportedStates": [
            "Collected"
        ],
        "requiredProperties": [
            "token"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "userId",
                "dataType": "double"
            },
            {
                "parameter": "bloodGlucose",
                "dataType": "double"
            },
            {
                "parameter": "bloodOxygen",
                "dataType": "double"
            },
            {
                "parameter": "bmi",
                "dataType": "double"
            },
            {
                "parameter": "bodyFat",
                "dataType": "double"
            },
            {
                "parameter": "heartRate",
                "dataType": "double"
            },
            {
                "parameter": "weight",
                "dataType": "double"
            }
        ]
    }
}
