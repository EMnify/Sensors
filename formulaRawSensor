{
    "name": "formulaRawSensor",
    "version": "1.0.1",
    "script": "console.log(\"rawData sensor\");\nif(options.requiredProperties.formula) {\n    try{\n      //console.log(options);\n      var rawValue =  waylayUtil.evaluateData(options, options.requiredProperties.formula);\n      var value = {\n        observedState:  rawValue > options.requiredProperties.threshold  ? \"Above\": \"Below\",\n        rawData:  {  rawValue: rawValue}  \n      };\n      //console.log(\"value was \" + rawValue);\n      send(null, value);\n    } catch(err){\n        send(new Error(err));\n    }\n} else{\n  send(new Error(\"Missing property formula\"));\n}\n",
    "metadata": {
        "author": "",
        "category": "Functions",
        "description": "Formula RAW sensor\nIn this example, you can for instance as the input params use:\n<ul>\n<li> formula: &lt;hello.randomValue&gt; + &lt;world.randomValue&gt;</li>\n<li> threshold: 6</li>\n</ul>\n\nDon't forget to <strong>commnent out the raw data</strong> from the script once you put it in production.\n",
        "iconURL": "http://icons.iconarchive.com/icons/graphicloads/100-flat-2/256/calculator-icon.png",
        "supportedStates": [
            "Above",
            "Below"
        ],
        "requiredProperties": [
            "formula",
            "threshold"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "rawValue",
                "dataType": "double"
            }
        ]
    }
}
