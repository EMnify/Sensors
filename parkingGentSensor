{
    "metadata": {
        "author": "",
        "category": "Smart City",
        "description": "Parking Gent sensor",
        "documentationURL": "http://datatank.gent.be/Mobiliteitsbedrijf/Parkings11.jso",
        "iconURL": "http://findicons.com/files/icons/1925/signals/128/parking.png",
        "supportedStates": [
            "Found"
        ],
        "requiredProperties": [
            "latitude",
            "longitude"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "parkings",
                "dataType": "string[]"
            }
        ]
    },
    "script": "var latitude = options.requiredProperties.latitude;\nvar longitude = options.requiredProperties.longitude;\n//if location given, we will search for the parking spot that is free and closest to the given location\n\ntry{\n    var url =\"http://datatank.gent.be/Mobiliteitsbedrijf/Parkings11.json\";\n    request({\n            \"uri\": url\n        }, function(err, response, body){\n            if (!err && response.statusCode == 200) {\n                var data = JSON.parse(body);\n                //console.log(data);\n                var parkings = data.Parkings11.parkings;\n                var notFullParking = __.filter(parkings, function(parking) {return !parking.full && parking.open;});\n                var rawData = { parkings : parkings, openNotFull: notFullParking};\n                if(latitude && longitude){\n                    //console.log(notFullParking);\n                    var bestLocation = __.min(parkings, function(parking){ \n                        //console.log(parking.latitude);\n                        var dist = waylayUtil.getDistance(latitude, longitude, parking.latitude, parking.longitude);\n                        console.log(dist);\n                        return dist;\n                        });\n                    if(bestLocation){\n                        bestLocation.distance =  waylayUtil.getDistance(latitude, longitude, bestLocation.latitude, bestLocation.longitude);\n                        rawData.bestLocation = bestLocation;\n                        console.log(bestLocation);\n                    }\n                }\n                \n                var value ={\n                    observedState : \"Found\",\n                    rawData : rawData\n                }\n               send(null, value);\n            } else {\n                console.log(response);\n                send(new Error(response.statusCode));\n            }\n    });    \n} catch(err){\n    send(new Error(err));\n}\n",
    "name": "parkingGentSensor",
    "version": "0.0.3",
    "type": "sensor"
}
